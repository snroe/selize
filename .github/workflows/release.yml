name: Release to GitHub

on:
  push:
    tags:
      - 'v*' # 触发条件：当有以 v 开头的 tag 被推送到仓库时

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install pnpm (if needed)
        run: npm install -g pnpm

      - name: Build project (optional)
        run: pnpm run build

      - name: Create release directory
        run: mkdir -p release-artifacts

      - name: Copy files based on .npmignore blacklist
        run: |
          git check-ignore -v . | cut -f3- | sort | uniq > .npmignore-list || touch .npmignore-list
          find . -type f | grep -vFf .npmignore-list | xargs -I{} cp --parents {} release-artifacts/ || echo "No files to copy"

      - name: Package release assets into zip
        run: |
          cd release-artifacts && zip -r ../release.zip .

      - name: Get previous tag
        id: previous_tag
        run: |
          CURRENT_TAG=${{ github.ref }}
          PREV_TAG=$(git describe --tags --abbrev=0 $CURRENT_TAG^)
          echo "::set-output name=current_tag::$CURRENT_TAG"
          echo "::set-output name=prev_tag::$PREV_TAG"

      - name: Generate commits between tags
        id: generate_commits
        run: |
          CURRENT_TAG="${{ steps.previous_tag.outputs.current_tag }}"
          PREV_TAG="${{ steps.previous_tag.outputs.prev_tag }}"

          echo "Getting commits from $PREV_TAG to $CURRENT_TAG..."

          if [ "$PREV_TAG" != "$CURRENT_TAG" ]; then
            COMMITS=$(git log $PREV_TAG..$CURRENT_TAG --pretty=format:"- %s")
          else
            COMMITS="- Initial release"
          fi

          echo "$COMMITS"
          echo "::set-output name=commits::$COMMITS"

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.previous_tag.outputs.current_tag }}
          release_name: Release ${{ steps.previous_tag.outputs.current_tag }}
          draft: false
          prerelease: false
          body: |
            ## Changelog since ${{ steps.previous_tag.outputs.prev_tag }}

            ${{ steps.generate_commits.outputs.commits }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release.zip
          asset_name: release.zip
          asset_content_type: application/zip